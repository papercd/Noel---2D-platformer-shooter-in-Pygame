render 순서: 
things to render to background surf:
background -> tilemap -> ""enemies"" ->items -> bullets -> particles ->""player"" -> fire particles -> sparks -> non_animated_particles

things to do: 
1. render background to background layer texture 
2. render tilemap to background layer texture 
3. render enemies to background layer texture -> retrieve lightmap data and normal map data and render.
4. render items to background layer texture
5. render bullets -> particles -> to background layer texture 
6. render player to background layer texture, retrieve lightmap data and normal map data to render.
7.  render fire particles, sparks, and non_animated particles to the background texture.
8. render the light over the background layer texture.




how things are done - 
the entities in the order above are rendered onto a pygame surface, that surface is converted to a moderngl texture, then that is rendered onto the background layer's texture object.

then, with the lights_engine.render() method, lighting is covered over the display. 

So, to be able to render sprites with normal maps, I would need to render the sprites after the lightmap data is made, retrieve the lightmap data over the position of the pixels of the sprite that I want to render, in world space, then do some calculations with the created normal map to produce the fragments. But the lightmap data can be made before these things are rendered.

things to render with normal map :

enemies, player 
